plugins {
    id("org.jetbrains.kotlin.jvm") version "1.9.20"
    id("org.jetbrains.kotlin.plugin.allopen") version "1.9.20"
    id("com.google.devtools.ksp") version "1.9.20-1.0.14"
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.2.0"
    id("io.micronaut.aot") version "4.2.0"
    id("org.jetbrains.kotlin.plugin.noarg") version "1.9.20"
    id("io.micronaut.test-resources") version "4.2.0"
}

noArg {
    annotation("com.my.Annotation")
    invokeInitializers = true
}
version = "0.1"
group = "example.micronaut"

repositories {
    mavenCentral()
}

dependencies {
    ksp('io.micronaut:micronaut-http-validation:3.9.2')
    ksp('io.micronaut.serde:micronaut-serde-processor:1.5.2')
    ksp("io.micronaut.data:micronaut-data-processor")
    ksp("io.micronaut:micronaut-http-validation")
    ksp("io.micronaut.validation:micronaut-validation-processor")
    implementation("jakarta.validation:jakarta.validation-api")
    implementation('io.micronaut:micronaut-http-client:3.8.7')
    implementation("io.micronaut.data:micronaut-data-r2dbc")
    implementation("io.micronaut.data:micronaut-data-hibernate-reactive")
    implementation('io.micronaut.kotlin:micronaut-kotlin-runtime:3.2.2')
    implementation('io.micronaut.serde:micronaut-serde-jackson:1.5.2')
    implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.9.20")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("io.micronaut.sql:micronaut-hibernate-reactive")
    implementation("io.micronaut.flyway:micronaut-flyway")
    implementation("io.micronaut.beanvalidation:micronaut-hibernate-validator")
    implementation("io.vertx:vertx-pg-client")
    implementation("io.micronaut.openapi:micronaut-openapi-annotations")
    implementation("ch.qos.logback:logback-classic")
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
    implementation('com.ongres.scram:client:2.1')
    runtimeOnly("io.r2dbc:r2dbc-postgresql")
    runtimeOnly("org.yaml:snakeyaml")
    runtimeOnly("org.postgresql:postgresql")
    implementation("org.postgresql:postgresql:42.7.0")
    implementation("org.postgresql:r2dbc-postgresql:1.0.2.RELEASE")
    compileOnly("io.micronaut.openapi:micronaut-openapi-annotations")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs = [
            '-parameters'
    ]
}
application {
    mainClass.set("example.micronaut.ApplicationKt")
}


java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}


graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("example.micronaut.*")
    }
    aot {
    // Please review carefully the optimizations enabled below
    // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
    }
}



